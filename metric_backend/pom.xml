<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>np1815.feedback</groupId>
  <artifactId>metric_backend</artifactId>
  <packaging>jar</packaging>
  <name>metric_backend</name>
  <version>0.0.1</version>

  <licenses>
    <license>
      <name>Unlicense</name>
      <url>http://unlicense.org</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <java.version>1.8</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <!-- Taken from auto-generated pom.xml -->
    <swagger-core-version>1.5.18</swagger-core-version>
    <beanvalidation-version>1.1.0.Final</beanvalidation-version>
    <jetty-version>9.2.9.v20150224</jetty-version>
    <jersey2-version>2.22.4</jersey2-version>
    <jackson-version>2.8.9</jackson-version>
    <junit-version>4.12</junit-version>
    <logback-version>1.1.7</logback-version>
    <servlet-api-version>2.5</servlet-api-version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- ............................................. -->

    <swagger-ui.version>3.20.9</swagger-ui.version>

    <db.url>jdbc:postgresql://cloud-vm-46-203.doc.ic.ac.uk:5432/feedback_driven_development</db.url>
    <db.username>metric_backend</db.username>
    <db.password>imperial</db.password>
  </properties>

  <build>
    <sourceDirectory>src/main/java</sourceDirectory>
    <plugins>

      <!-- Dependency plugin: For unpacking the swagger UI webjar into our build -->
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.webjars</groupId>
                  <artifactId>swagger-ui</artifactId>
                  <version>${swagger-ui.version}</version>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/swagger-ui</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Resources plugin: For copying the swagger UI static files into our deployed web app-->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>target/${project.artifactId}-${project.version}</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/swagger-ui/META-INF/resources/webjars/swagger-ui/${swagger-ui.version}</directory>
                </resource>
                <resource>
                  <directory>src/main/webapp</directory>
                  <includes>openapi.yaml</includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Replacer: for replacing the swagger spec URL with the local one -->
      <plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <version>1.5.3</version>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>replace</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <file>${project.build.directory}/swagger-ui/META-INF/resources/webjars/swagger-ui/${swagger-ui.version}/index.html</file>
          <replacements>
            <replacement>
              <token>https://petstore.swagger.io/v2/swagger.json</token>
              <value>/openapi.yaml</value>
            </replacement>
          </replacements>
        </configuration>
      </plugin>

      <!-- OpenAPI generator: for generating server stub -->
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>3.3.4</version>
        <executions>
          <execution>
            <id>generate-metric-backend-stub</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>jaxrs-jersey</generatorName>

              <inputSpec>${project.basedir}/src/main/webapp/openapi.yaml</inputSpec>
              <output>${project.basedir}/src/gen/openapi</output>
              <validateSpec>true</validateSpec>

              <addCompileSourceRoot>true</addCompileSourceRoot>
              <!--<generateSupportingFiles>false</generateSupportingFiles>-->

              <configOptions>
                <sourceFolder>java</sourceFolder>
                <implFolder>impl</implFolder>

                <java8>true</java8>
                <dateLibrary>java8-localdatetime</dateLibrary>

                <modelPackage>np1815.feedback.metricsbackend.model</modelPackage>
                <apiPackage>np1815.feedback.metricsbackend.api</apiPackage>

                <useBeanValidation>true</useBeanValidation>
              </configOptions>
            </configuration>
          </execution>

          <execution>
            <id>generate-python-client</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>python</generatorName>

              <inputSpec>${project.basedir}/src/main/webapp/openapi.yaml</inputSpec>
              <!-- TODO: Generate to directory inside metric_backend -->
              <output>${project.basedir}/../feedback_wrapper</output>
              <validateSpec>true</validateSpec>

              <!-- Needed in order to generate api_client.py, configuration.py, etc. -->
              <generateSupportingFiles>true</generateSupportingFiles>
              <generateApiDocumentation>false</generateApiDocumentation>
              <generateModelDocumentation>false</generateModelDocumentation>

              <configOptions>
                <packageName>metric_backend_client</packageName>

                <!-- Get rid of setup.py and other junk files -->
                <generateSourceCodeOnly>true</generateSourceCodeOnly>
              </configOptions>
            </configuration>
          </execution>

          <execution>
            <id>generate-java-client</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>java</generatorName>

              <inputSpec>${project.basedir}/src/main/webapp/openapi.yaml</inputSpec>
              <output>${project.basedir}/src/gen/metric_backend_client</output>
              <validateSpec>true</validateSpec>

              <!-- Needed in order to generate api_client.py, configuration.py, etc. -->
              <generateSupportingFiles>true</generateSupportingFiles>

              <!-- Models are already generated by the server stub - this needs to be off in order to not cause any duplicates -->
              <generateModels>false</generateModels>

              <generateApis>true</generateApis>
              <generateApiDocumentation>false</generateApiDocumentation>
              <generateApiTests>false</generateApiTests>
              <generateModelDocumentation>false</generateModelDocumentation>
              <generateModelTests>false</generateModelTests>
              <supportingFilesToGenerate>
                ApiClient.java,RFC3339DateFormat.java
                <!-- ,RFC3339DateFormat.java,StringUtil.java -->
              </supportingFilesToGenerate>

              <addCompileSourceRoot>true</addCompileSourceRoot>

              <configOptions>
                <modelPackage>np1815.feedback.metricsbackend.model</modelPackage>
                <apiPackage>np1815.feedback.metricsbackend.api</apiPackage>
                <invokerPackage>np1815.feedback.metricsbackend.client</invokerPackage>

                <!-- Get rid of setup.py and other junk files -->
                <generateSourceCodeOnly>true</generateSourceCodeOnly>

                <dateLibrary>java8-localdatetime</dateLibrary>
                <library>google-api-client</library>
                <sourceFolder>java</sourceFolder>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Failsafe: for running integration tests -->
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <!-- Jetty: for running our web server -->
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jetty-version}</version>
        <configuration>
          <webApp>
            <contextPath>/</contextPath>
            <descriptor>src/main/webapp/WEB-INF/web.xml</descriptor>
          </webApp>
          <webAppSourceDirectory>target/${project.artifactId}-${project.version}</webAppSourceDirectory>
          <stopPort>8079</stopPort>
          <stopKey>stopit</stopKey>
          <stopWait>10</stopWait>
          <httpConnector>
            <port>8080</port>
            <idleTimeout>60000</idleTimeout>
          </httpConnector>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${beanvalidation-version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>start-jetty</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <httpConnector>
                  <port>3333</port>
              </httpConnector>
              <scanIntervalSeconds>0</scanIntervalSeconds>
            </configuration>
          </execution>
          <execution>
            <id>stop-jetty</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Build helper: For adding multiple source directories to the project -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.9.1</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/gen/, start_timejooq/java</source>
                <source>src/gen/openapi/java</source>
                <source>src/gen/metric_backend_client/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Flyway: For applying database migrations -->
      <plugin>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-maven-plugin</artifactId>
        <version>5.2.4</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>migrate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <url>${db.url}</url>
          <user>${db.username}</user>
          <password>${db.password}</password>
          <locations>
            <location>filesystem:src/main/resources/db/migration</location>
          </locations>
          <schemas>
            <schema>metrics</schema>
            <schema>requests</schema>
          </schemas>
        </configuration>
      </plugin>

      <!-- JOOQ: For generating SQL objects from our database -->
      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>3.11.10</version>
        <executions>
          <execution>
            <id>jooq-codegen</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <jdbc>
            <driver>org.postgresql.Driver</driver>
            <url>${db.url}</url>
            <user>${db.username}</user>
            <password>${db.password}</password>
          </jdbc>

          <logging>WARN</logging>
          <generator>
            <name>org.jooq.codegen.JavaGenerator</name>
            <database>
              <name>org.jooq.meta.postgres.PostgresDatabase</name>
              <includes>.*</includes>
              <schemata>
                <schema>
                  <inputSchema>metrics</inputSchema>
                </schema>
                <schema>
                  <inputSchema>requests</inputSchema>
                </schema>
              </schemata>
              <catalogVersionProvider>SELECT max(version) FROM metrics.flyway_schema_history</catalogVersionProvider>
              <schemaVersionProvider>SELECT max(version) FROM metrics.flyway_schema_history</schemaVersionProvider>
            </database>
            <target>
              <packageName>np1815.feedback.metricsbackend.db</packageName>
              <directory>src/gen/jooq/java</directory>
            </target>
            <generate>
              <!-- Generation flags: See advanced configuration properties -->
            </generate>
          </generator>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>

    <!-- Taken from auto-generated pom.xml -->
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-jersey2-jaxrs</artifactId>
      <scope>compile</scope>
      <version>${swagger-core-version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback-version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${logback-version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.4.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.4.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${servlet-api-version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet-core</artifactId>
      <version>${jersey2-version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
      <version>${jersey2-version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${jackson-version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <version>${jackson-version}</version>
    </dependency>
    <!-- Base64 encoding that works in both JVM and Android -->
    <dependency>
      <groupId>com.brsanthu</groupId>
      <artifactId>migbase64</artifactId>
      <version>2.2</version>
    </dependency>
    <!-- Bean Validation API support -->
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>${beanvalidation-version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- ...................................................................... -->


    <!-- My own dependencies -->

    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-joda</artifactId>
      <version>${jackson-version}</version>
    </dependency>
    <!-- JOOQ: for generating database classes -->
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
      <version>3.11.9</version>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-meta</artifactId>
      <version>3.11.9</version>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-codegen</artifactId>
      <version>3.11.9</version>
    </dependency>
    <!-- For database connection (via JOOQ context) -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.2.5</version>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>1.4</version>
    </dependency>
    <!-- For various utility classes -->
    <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>27.1-jre</version>
    </dependency>
    <!-- Dependency injection -->
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>4.0</version>
    </dependency>
    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.26</version>
    </dependency>
    <!-- Java Client library -->
    <dependency>
      <groupId>com.google.api-client</groupId>
      <artifactId>google-api-client</artifactId>
      <version>1.28.0</version>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>sonatype-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
</project>
